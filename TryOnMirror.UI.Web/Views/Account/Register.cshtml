@model SymaCord.TryOnMirror.UI.Web.ViewModels.RegisterModel
@{
    ViewBag.Title = "Register";
}

<div class="title-wrapper">
    <div class="container">
        <h1>@ViewBag.Title</h1>
    </div>
</div>

<div class="row">
    <div class="container">
        <div class="col-sm-6">
            @using (Html.BeginForm("register", "account", FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="form-group">
                    @Html.LabelFor(x => x.UserName, new {@class = "col-sm-3"})
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.UserName, new {placeholder = "Username", @class = "form-control input-sm"})
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Email, new {@class = "col-sm-3"})
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Email, new {placeholder = "Email", @class = "form-control input-sm"})
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Password, new {@class = "col-sm-3"})

                    <div class="col-sm-4">
                        @Html.PasswordFor(m => m.Password, new {placeholder = "Password", @class = "form-control input-sm"})
                    </div>
                    
                    <div class="col-sm-4">
                        @Html.PasswordFor(m => m.ConfirmPassword, new
                            {
                                placeholder = "Confirm Password",
                                @class = "form-control input-sm"
                            })
                        
                        @Html.ValidationMessageFor(m => m.Password)
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>

            @*    
        <div class="control-group">
            @Html.LabelFor(x=>x.ConfirmPassword, new{@class="control-label"})
            <div class="controls">
                @Html.PasswordFor(m => m.ConfirmPassword, new{placeholder="Confirm Password"})
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        </div>*@

                <div class="form-group">
                    <div class="col-sm-3"></div>
                    
                    <div class="col-sm-9">
                        <button type="submit" class="btn btn-primary">Sign up</button>
                    </div>
                </div>
            }
            
            <p>
                Already have an account? <a href="@Url.Action("signin", "account")">Sign in</a>.
            </p>
        </div>
        
        <div class="col-sm-1 text-center">
            <h3>Or</h3>
        </div>

        <div class="col-sm-5">
        <section class="social" id="socialLoginForm">
            @*<h2>Use another service to log in.</h2>*@
            @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/assets/scripts/jqueryval")
}
